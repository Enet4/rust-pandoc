var searchIndex = {};
searchIndex["either"] = {"doc":"The enum [`Either`] with variants `Left` and `Right` is a general purpose sum type with two cases.","items":[[4,"Either","either","The enum `Either` with variants `Left` and `Right` is a general purpose sum type with two cases.",null,null],[13,"Left","","A value of type `L`.",0,null],[13,"Right","","A value of type `R`.",0,null],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"either"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"either"}],"o":{"n":"bool"}}],[11,"ne","","",0,{"i":[{"n":"self"},{"n":"either"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",0,{"i":[{"n":"self"},{"n":"either"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",0,{"i":[{"n":"self"},{"n":"either"}],"o":{"n":"bool"}}],[11,"le","","",0,{"i":[{"n":"self"},{"n":"either"}],"o":{"n":"bool"}}],[11,"gt","","",0,{"i":[{"n":"self"},{"n":"either"}],"o":{"n":"bool"}}],[11,"ge","","",0,{"i":[{"n":"self"},{"n":"either"}],"o":{"n":"bool"}}],[11,"cmp","","",0,{"i":[{"n":"self"},{"n":"either"}],"o":{"n":"ordering"}}],[11,"hash","","",0,null],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"is_left","","Return true if the value is the `Left` variant.",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_right","","Return true if the value is the `Right` variant.",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"left","","Convert the left side of `Either<L, R>` to an `Option<L>`.",0,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"right","","Convert the right side of `Either<L, R>` to an `Option<R>`.",0,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"as_ref","","Convert `&Either<L, R>` to `Either<&L, &R>`.",0,{"i":[{"n":"self"}],"o":{"n":"either"}}],[11,"as_mut","","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.",0,{"i":[{"n":"self"}],"o":{"n":"either"}}],[11,"flip","","Convert `Either<L, R>` to `Either<R, L>`.",0,{"i":[{"n":"self"}],"o":{"n":"either"}}],[11,"map_left","","Apply the function `f` on the value in the `Left` variant if it is present rewrapping the result in `Left`.",0,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"either"}}],[11,"map_right","","Apply the function `f` on the value in the `Right` variant if it is present rewrapping the result in `Right`.",0,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"either"}}],[11,"either","","Apply one of two functions depending on contents, unifying their result. If the value is `Left(L)` then the first function `f` is applied; if it is `Right(R)` then the second function `g` is applied.",0,{"i":[{"n":"self"},{"n":"f"},{"n":"g"}],"o":{"n":"t"}}],[11,"either_with","","Like `either`, but provide some context to whichever of the functions ends up being called.",0,{"i":[{"n":"self"},{"n":"ctx"},{"n":"f"},{"n":"g"}],"o":{"n":"t"}}],[11,"left_and_then","","Apply the function `f` on the value in the `Left` variant if it is present.",0,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"either"}}],[11,"right_and_then","","Apply the function `f` on the value in the `Right` variant if it is present.",0,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"either"}}],[11,"into_iter","","Convert the inner value to an iterator.",0,{"i":[{"n":"self"}],"o":{"n":"either"}}],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",0,null],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",0,null],[11,"into_inner","","Extract the value of an either over two equivalent types.",0,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"from","","",0,{"i":[{"n":"result"}],"o":{"n":"self"}}],[11,"into","","",0,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"extend","","",0,{"i":[{"n":"self"},{"n":"t"}]}],[11,"next","","",0,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",0,null],[11,"fold","","",0,{"i":[{"n":"self"},{"n":"acc"},{"n":"g"}],"o":{"n":"acc"}}],[11,"count","","",0,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"last","","",0,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"nth","","",0,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"option"}}],[11,"collect","","",0,{"i":[{"n":"self"}],"o":{"n":"b"}}],[11,"all","","",0,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"bool"}}],[11,"next_back","","",0,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"as_ref","","",0,{"i":[{"n":"self"}],"o":{"n":"target"}}],[11,"as_mut","","",0,{"i":[{"n":"self"}],"o":{"n":"target"}}],[11,"deref","","",0,null],[11,"deref_mut","","",0,null],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[14,"try_left","","Macro for unwrapping the left side of an `Either`, which fails early with the opposite side. Can only be used in functions that return `Either` because of the early return of `Right` that it provides.",null,null],[14,"try_right","","Dual to `try_left!`, see its documentation for more information.",null,null]],"paths":[[4,"Either"]]};
searchIndex["itertools"] = {"doc":"Itertools — extra iterator adaptors, functions and macros.","items":[[4,"Either","itertools","The enum `Either` with variants `Left` and `Right` is a general purpose sum type with two cases.",null,null],[13,"Left","","A value of type `L`.",0,null],[13,"Right","","A value of type `R`.",0,null],[4,"Diff","","A type returned by the `diff_with` function.",null,null],[13,"FirstMismatch","","The index of the first non-matching element along with both iterator's remaining elements starting with the first mis-match.",1,null],[13,"Shorter","","The total number of elements that were in `J` along with the remaining elements of `I`.",1,null],[13,"Longer","","The total number of elements that were in `I` along with the remaining elements of `J`.",1,null],[4,"MinMaxResult","","`MinMaxResult` is an enum returned by `minmax`. See `Itertools::minmax()` for more detail.",null,null],[13,"NoElements","","Empty iterator",2,null],[13,"OneElement","","Iterator with one element, so the minimum and maximum are the same",2,null],[13,"MinMax","","More than one element in the iterator, the first element is not larger than the second",2,null],[4,"Position","","A value yielded by `WithPosition`. Indicates the position of this element in the iterator results.",null,null],[13,"First","","This is the first element.",3,null],[13,"Middle","","This is neither the first nor the last element.",3,null],[13,"Last","","This is the last element.",3,null],[13,"Only","","This is the only element.",3,null],[4,"EitherOrBoth","","A value yielded by `ZipLongest`. Contains one or two values, depending on which of the input iterators are exhausted.",null,null],[13,"Both","","Neither input iterator is exhausted yet, yielding two values.",4,null],[13,"Left","","The parameter iterator of `.zip_longest()` is exhausted, only yielding a value from the `self` iterator.",4,null],[13,"Right","","The `self` iterator of `.zip_longest()` is exhausted, only yielding a value from the parameter iterator.",4,null],[4,"FoldWhile","","An enum used for controlling the execution of `.fold_while()`.",null,null],[13,"Continue","","Continue folding with this value",5,null],[13,"Done","","Fold is complete and will return this value",5,null],[5,"concat","","Combine all an iterator's elements into one element by using `Extend`.",null,null],[5,"cons_tuples","","Create an iterator that maps for example iterators of `((A, B), C)` to `(A, B, C)`.",null,{"i":[{"n":"i"}],"o":{"n":"constuples"}}],[5,"diff_with","","Compares every element yielded by both `i` and `j` with the given function in lock-step and returns a `Diff` which describes how `j` differs from `i`.",null,{"i":[{"n":"i"},{"n":"j"},{"n":"f"}],"o":{"g":["diff"],"n":"option"}}],[5,"kmerge_by","","Create an iterator that merges elements of the contained iterators.",null,{"i":[{"n":"i"},{"n":"f"}],"o":{"n":"kmergeby"}}],[5,"process_results","","“Lift” a function of the values of an iterator so that it can process an iterator of `Result` values instead.",null,{"i":[{"n":"i"},{"n":"f"}],"o":{"n":"result"}}],[5,"repeat_n","","Create an iterator that produces `n` repetitions of `element`.",null,{"i":[{"n":"a"},{"n":"usize"}],"o":{"n":"repeatn"}}],[5,"repeat_call","","An iterator source that produces elements indefinitely by calling a given closure.",null,{"i":[{"n":"f"}],"o":{"n":"repeatcall"}}],[5,"unfold","","Creates a new unfold source with the specified closure as the \"iterator function\" and an initial state to eventually pass to the closure",null,{"i":[{"n":"st"},{"n":"f"}],"o":{"n":"unfold"}}],[5,"iterate","","Creates a new iterator that infinitely applies function to value and yields results.",null,{"i":[{"n":"st"},{"n":"f"}],"o":{"n":"iterate"}}],[5,"multizip","","An iterator that generalizes .zip() and allows running multiple iterators in lockstep.",null,{"i":[{"n":"u"}],"o":{"n":"zip"}}],[5,"interleave","","Create an iterator that interleaves elements in `i` and `j`.",null,{"i":[{"n":"i"},{"n":"j"}],"o":{"n":"interleave"}}],[5,"merge","","Create an iterator that merges elements in `i` and `j`.",null,{"i":[{"n":"i"},{"n":"j"}],"o":{"n":"merge"}}],[5,"put_back","","Create an iterator where you can put back a single item",null,{"i":[{"n":"i"}],"o":{"n":"putback"}}],[5,"put_back_n","","Create an iterator where you can put back multiple values to the front of the iteration.",null,{"i":[{"n":"i"}],"o":{"n":"putbackn"}}],[5,"multipeek","","An iterator adaptor that allows the user to peek at multiple `.next()` values without advancing the base iterator.",null,{"i":[{"n":"i"}],"o":{"n":"multipeek"}}],[5,"kmerge","","Create an iterator that merges elements of the contained iterators using the ordering function.",null,{"i":[{"n":"i"}],"o":{"n":"kmerge"}}],[5,"zip_eq","","Iterate `i` and `j` in lock step.",null,{"i":[{"n":"i"},{"n":"j"}],"o":{"n":"zipeq"}}],[5,"rciter","","Return an iterator inside a `Rc<RefCell<_>>` wrapper.",null,{"i":[{"n":"i"}],"o":{"n":"rciter"}}],[5,"enumerate","","Iterate `iterable` with a running index.",null,{"i":[{"n":"i"}],"o":{"n":"enumerate"}}],[5,"rev","","Iterate `iterable` in reverse.",null,{"i":[{"n":"i"}],"o":{"n":"rev"}}],[5,"zip","","Iterate `i` and `j` in lock step.",null,{"i":[{"n":"i"},{"n":"j"}],"o":{"n":"zip"}}],[5,"chain","","Create an iterator that first iterates `i` and then `j`.",null,{"i":[{"n":"i"},{"n":"j"}],"o":{"n":"chain"}}],[5,"cloned","","Create an iterator that clones each element from &T to T",null,{"i":[{"n":"i"}],"o":{"n":"cloned"}}],[5,"fold","","Perform a fold operation over the iterable.",null,{"i":[{"n":"i"},{"n":"b"},{"n":"f"}],"o":{"n":"b"}}],[5,"all","","Test whether the predicate holds for all elements in the iterable.",null,{"i":[{"n":"i"},{"n":"f"}],"o":{"n":"bool"}}],[5,"any","","Test whether the predicate holds for any elements in the iterable.",null,{"i":[{"n":"i"},{"n":"f"}],"o":{"n":"bool"}}],[5,"max","","Return the maximum value of the iterable.",null,{"i":[{"n":"i"}],"o":{"n":"option"}}],[5,"min","","Return the minimum value of the iterable.",null,{"i":[{"n":"i"}],"o":{"n":"option"}}],[5,"join","","Combine all iterator elements into one String, seperated by `sep`.",null,{"i":[{"n":"i"},{"n":"str"}],"o":{"n":"string"}}],[5,"sorted","","Collect all the iterable's elements into a sorted vector in ascending order.",null,{"i":[{"n":"i"}],"o":{"n":"vec"}}],[5,"equal","","Return `true` if both iterators produce equal sequences (elements pairwise equal and sequences of the same length), `false` otherwise.",null,{"i":[{"n":"i"},{"n":"j"}],"o":{"n":"bool"}}],[5,"assert_equal","","Assert that two iterators produce equal sequences, with the same semantics as equal(a, b).",null,{"i":[{"n":"i"},{"n":"j"}]}],[5,"partition","","Partition a sequence using predicate `pred` so that elements that map to `true` are placed before elements which map to `false`.",null,{"i":[{"n":"i"},{"n":"f"}],"o":{"n":"usize"}}],[0,"structs","","The concrete iterator types.",null,null],[3,"Dedup","itertools::structs","An iterator adaptor that removes repeated duplicates.",null,null],[3,"Interleave","","An iterator adaptor that alternates elements from two iterators until both run out.",null,null],[3,"InterleaveShortest","","An iterator adaptor that alternates elements from the two iterators until one of them runs out.",null,null],[3,"Product","","An iterator adaptor that iterates over the cartesian product of the element sets of two iterators `I` and `J`.",null,null],[3,"PutBack","","An iterator adaptor that allows putting back a single item to the front of the iterator.",null,null],[3,"PutBackN","","An iterator adaptor that allows putting multiple items in front of the iterator.",null,null],[3,"Batching","","A “meta iterator adaptor”. Its closure recives a reference to the iterator and may pick off as many elements as it likes, to produce the next iterator element.",null,null],[3,"Step","","An iterator adaptor that steps a number elements in the base iterator for each iteration.",null,null],[3,"MapResults","","An iterator adapter to apply a transformation within a nested `Result`.",null,null],[3,"Merge","","An iterator adaptor that merges the two base iterators in ascending order. If both base iterators are sorted (ascending), the result is sorted.",null,null],[3,"MergeBy","","An iterator adaptor that merges the two base iterators in ascending order. If both base iterators are sorted (ascending), the result is sorted.",null,null],[3,"MultiPeek","","See `multipeek()` for more information.",null,null],[3,"TakeWhileRef","","An iterator adaptor that borrows from a `Clone`-able iterator to only pick off elements while the predicate returns `true`.",null,null],[3,"WhileSome","","An iterator adaptor that filters `Option<A>` iterator elements and produces `A`. Stops on the first `None` encountered.",null,null],[3,"Coalesce","","An iterator adaptor that may join together adjacent elements.",null,null],[3,"TupleCombinations","","An iterator to iterate through all combinations in a `Clone`-able iterator that produces tuples of a specific size.",null,null],[3,"Combinations","","An iterator to iterate through all the `n`-length combinations in an iterator.",null,null],[3,"Unique","","An iterator adapter to filter out duplicate elements.",null,null],[3,"UniqueBy","","An iterator adapter to filter out duplicate elements.",null,null],[3,"Flatten","","An iterator adapter to simply flatten a structure.",null,null],[3,"Positions","","An iterator adapter to get the positions of each element that matches a predicate.",null,null],[3,"ConsTuples","","An iterator that maps an iterator of tuples like `((A, B), C)` to an iterator of `(A, B, C)`.",null,null],[3,"Format","","Format all iterator elements lazily, separated by `sep`.",null,null],[3,"FormatWith","","Format all iterator elements lazily, separated by `sep`.",null,null],[3,"IntoChunks","","`ChunkLazy` is the storage for a lazy chunking operation.",null,null],[3,"Chunk","","An iterator for the elements in a single chunk.",null,null],[3,"Chunks","","An iterator that yields the Chunk iterators.",null,null],[3,"GroupBy","","`GroupBy` is the storage for the lazy grouping operation.",null,null],[3,"Group","","An iterator for the elements in a single group.",null,null],[3,"Groups","","An iterator that yields the Group iterators.",null,null],[3,"Intersperse","","An iterator adaptor to insert a particular value between each element of the adapted iterator.",null,null],[3,"KMerge","","An iterator adaptor that merges an abitrary number of base iterators in ascending order. If all base iterators are sorted (ascending), the result is sorted.",null,null],[3,"KMergeBy","","An iterator adaptor that merges an abitrary number of base iterators according to an ordering function.",null,null],[3,"PadUsing","","An iterator adaptor that pads a sequence to a minimum length by filling missing elements using a closure.",null,null],[3,"PeekingTakeWhile","","An iterator adaptor that takes items while a closure returns `true`.",null,null],[3,"ProcessResults","","An iterator that produces only the `T` values as long as the inner iterator produces `Ok(T)`.",null,null],[3,"RcIter","","A wrapper for `Rc<RefCell<I>>`, that implements the `Iterator` trait.",null,null],[12,"rciter","","The boxed iterator.",6,null],[3,"RepeatN","","An iterator that produces n repetitions of an element.",null,null],[3,"RepeatCall","","See `repeat_call` for more information.",null,null],[3,"Unfold","","See `unfold` for more information.",null,null],[12,"state","","Internal state that will be passed to the closure on the next iteration",7,null],[3,"Iterate","","An iterator that infinitely applies function to value and yields results.",null,null],[3,"Tee","","One half of an iterator pair where both return the same elements.",null,null],[3,"TupleBuffer","","An iterator over a incomplete tuple.",null,null],[3,"TupleWindows","","An iterator over all contiguous windows that produces tuples of a specific size.",null,null],[3,"Tuples","","An iterator that groups the items in tuples of a specific size.",null,null],[3,"WithPosition","","An iterator adaptor that wraps each element in an `Position`.",null,null],[3,"ZipEq","","An iterator which iterates two other iterators simultaneously",null,null],[3,"ZipLongest","","An iterator which iterates two other iterators simultaneously",null,null],[3,"Zip","","See `multizip` for more information.",null,null],[11,"clone","","",8,{"i":[{"n":"self"}],"o":{"n":"multipeek"}}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"reset_peek","","Reset the peeking “cursor”",8,{"i":[{"n":"self"}]}],[11,"peek","","Works exactly like `.next()` with the only difference that it doesn't advance itself. `.peek()` can be called multiple times, to peek further ahead.",8,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"next","","",8,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",8,null],[11,"clone","","",9,{"i":[{"n":"self"}],"o":{"n":"interleave"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"next","","",9,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",9,null],[11,"clone","","",10,{"i":[{"n":"self"}],"o":{"n":"interleaveshortest"}}],[11,"fmt","","",10,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"next","","",10,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",10,null],[11,"clone","","",11,{"i":[{"n":"self"}],"o":{"n":"putback"}}],[11,"fmt","","",11,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"with_value","","put back value `value` (builder method)",11,null],[11,"into_parts","","Split the `PutBack` into its parts.",11,null],[11,"put_back","","Put back a single value to the front of the iterator.",11,null],[11,"next","","",11,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",11,null],[11,"all","","",11,{"i":[{"n":"self"},{"n":"g"}],"o":{"n":"bool"}}],[11,"fold","","",11,{"i":[{"n":"self"},{"n":"acc"},{"n":"g"}],"o":{"n":"acc"}}],[11,"fmt","","",12,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",12,{"i":[{"n":"self"}],"o":{"n":"putbackn"}}],[11,"put_back","","Puts x in front of the iterator. The values are yielded in order of the most recently put back values first.",12,null],[11,"next","","",12,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",12,null],[11,"fmt","","",13,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",13,{"i":[{"n":"self"}],"o":{"n":"product"}}],[11,"next","","",13,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",13,null],[11,"fold","","",13,{"i":[{"n":"self"},{"n":"acc"},{"n":"g"}],"o":{"n":"acc"}}],[11,"clone","","",14,{"i":[{"n":"self"}],"o":{"n":"batching"}}],[11,"fmt","","",14,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"next","","",14,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",14,null],[11,"clone","","",15,{"i":[{"n":"self"}],"o":{"n":"step"}}],[11,"fmt","","",15,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"next","","",15,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",15,null],[11,"clone","","",16,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"fmt","","",16,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"next","","",16,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",16,null],[11,"fmt","","",17,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",17,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"next","","",17,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",17,null],[11,"clone","","",18,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"fmt","","",18,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"next","","",18,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",18,null],[11,"clone","","",19,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"fmt","","",19,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"next","","",19,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",19,null],[11,"fold","","",19,{"i":[{"n":"self"},{"n":"acc"},{"n":"g"}],"o":{"n":"acc"}}],[11,"fmt","","",20,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"next","","",20,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",20,null],[11,"clone","","",21,{"i":[{"n":"self"}],"o":{"n":"whilesome"}}],[11,"fmt","","",21,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"next","","",21,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",21,null],[11,"fmt","","",22,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"next","","",22,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"fmt","","",23,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"next","","",23,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"clone","","",24,{"i":[{"n":"self"}],"o":{"n":"uniqueby"}}],[11,"fmt","","",24,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"next","","",24,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",24,null],[11,"next","","",25,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",25,null],[11,"clone","","",25,{"i":[{"n":"self"}],"o":{"n":"unique"}}],[11,"fmt","","",25,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",26,{"i":[{"n":"self"}],"o":{"n":"flatten"}}],[11,"fmt","","",26,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"next","","",26,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"fold","","",26,{"i":[{"n":"self"},{"n":"acc"},{"n":"g"}],"o":{"n":"acc"}}],[11,"next","","",27,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",27,null],[11,"next","","",28,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",28,null],[11,"next_back","","",28,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"next","","",29,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",29,null],[11,"fold","","",29,{"i":[{"n":"self"},{"n":"acc"},{"n":"fold"}],"o":{"n":"acc"}}],[11,"next_back","","",29,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"next","","",29,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",29,null],[11,"fold","","",29,{"i":[{"n":"self"},{"n":"acc"},{"n":"fold"}],"o":{"n":"acc"}}],[11,"next_back","","",29,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"next","","",29,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",29,null],[11,"fold","","",29,{"i":[{"n":"self"},{"n":"acc"},{"n":"fold"}],"o":{"n":"acc"}}],[11,"next_back","","",29,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"next","","",29,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",29,null],[11,"fold","","",29,{"i":[{"n":"self"},{"n":"acc"},{"n":"fold"}],"o":{"n":"acc"}}],[11,"next_back","","",29,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"next","","",29,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",29,null],[11,"fold","","",29,{"i":[{"n":"self"},{"n":"acc"},{"n":"fold"}],"o":{"n":"acc"}}],[11,"next_back","","",29,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"next","","",29,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",29,null],[11,"fold","","",29,{"i":[{"n":"self"},{"n":"acc"},{"n":"fold"}],"o":{"n":"acc"}}],[11,"next_back","","",29,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"clone","","",29,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"clone","","",30,{"i":[{"n":"self"}],"o":{"n":"format"}}],[11,"fmt","","",31,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",30,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",30,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",30,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",30,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",30,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",30,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",30,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",30,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",30,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"next","","",32,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"drop","","",33,{"i":[{"n":"self"}]}],[11,"next","","",33,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"next","","",34,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"drop","","",35,{"i":[{"n":"self"}]}],[11,"next","","",35,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"clone","","",36,{"i":[{"n":"self"}],"o":{"n":"intersperse"}}],[11,"next","","",36,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",36,null],[11,"clone","","",37,{"i":[{"n":"self"}],"o":{"n":"kmerge"}}],[11,"next","","",37,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",37,null],[11,"next","","",38,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",38,null],[11,"clone","itertools","",2,{"i":[{"n":"self"}],"o":{"n":"minmaxresult"}}],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"minmaxresult"}],"o":{"n":"bool"}}],[11,"ne","","",2,{"i":[{"n":"self"},{"n":"minmaxresult"}],"o":{"n":"bool"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"into_option","","`into_option` creates an `Option` of type `(T, T)`. The returned `Option` has variant `None` if and only if the `MinMaxResult` has variant `NoElements`. Otherwise `Some((x, y))` is returned where `x <= y`. If the `MinMaxResult` has variant `OneElement(x)`, performing this operation will make one clone of `x`.",2,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"clone","itertools::structs","",39,{"i":[{"n":"self"}],"o":{"n":"padusing"}}],[11,"next","","",39,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",39,null],[11,"next_back","","",39,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"peeking_next","","",11,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"option"}}],[11,"peeking_next","","",12,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"option"}}],[11,"next","","",40,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",40,null],[11,"next","","",41,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",41,null],[11,"clone","","",6,{"i":[{"n":"self"}],"o":{"n":"rciter"}}],[11,"next","","",6,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",6,null],[11,"next_back","","",6,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"next","","",42,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",42,null],[11,"next_back","","",42,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"fmt","","",43,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"next","","",43,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",43,null],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",7,{"i":[{"n":"self"}],"o":{"n":"unfold"}}],[11,"next","","",7,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",7,null],[11,"clone","","",44,{"i":[{"n":"self"}],"o":{"n":"iterate"}}],[11,"fmt","","",44,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"next","","",44,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",44,null],[11,"next","","",45,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",45,null],[11,"next","","",46,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",46,null],[11,"next","","",47,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"into_buffer","","Return a buffer with the produced items that was not enough to be grouped in a tuple.",47,{"i":[{"n":"self"}],"o":{"n":"tuplebuffer"}}],[11,"next","","",48,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"clone","itertools","",3,{"i":[{"n":"self"}],"o":{"n":"position"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",3,{"i":[{"n":"self"},{"n":"position"}],"o":{"n":"bool"}}],[11,"ne","","",3,{"i":[{"n":"self"},{"n":"position"}],"o":{"n":"bool"}}],[11,"into_inner","","Return the inner value.",3,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"next","itertools::structs","",49,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",49,null],[11,"clone","","",50,{"i":[{"n":"self"}],"o":{"n":"zipeq"}}],[11,"next","","",50,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",50,null],[11,"clone","","",51,{"i":[{"n":"self"}],"o":{"n":"ziplongest"}}],[11,"next","","",51,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",51,null],[11,"next_back","","",51,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"clone","itertools","",4,{"i":[{"n":"self"}],"o":{"n":"eitherorboth"}}],[11,"eq","","",4,{"i":[{"n":"self"},{"n":"eitherorboth"}],"o":{"n":"bool"}}],[11,"ne","","",4,{"i":[{"n":"self"},{"n":"eitherorboth"}],"o":{"n":"bool"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","itertools::structs","",52,{"i":[{"n":"self"}],"o":{"n":"zip"}}],[11,"new","","Deprecated: renamed to multizip",52,{"i":[{"n":"u"}],"o":{"n":"zip"}}],[11,"from","","",52,null],[11,"next","","",52,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",52,null],[11,"from","","",52,null],[11,"next","","",52,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",52,null],[11,"from","","",52,null],[11,"next","","",52,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",52,null],[11,"from","","",52,null],[11,"next","","",52,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",52,null],[11,"from","","",52,null],[11,"next","","",52,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",52,null],[11,"from","","",52,null],[11,"next","","",52,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",52,null],[11,"from","","",52,null],[11,"next","","",52,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",52,null],[11,"from","","",52,null],[11,"next","","",52,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",52,null],[8,"PeekingNext","itertools","An iterator that allows peeking at an element before deciding to accept it.",null,null],[10,"peeking_next","","Pass a reference to the next iterator element to the closure `accept`; if `accept` returns true, return it as the next element, else None.",53,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"option"}}],[8,"Itertools","","The trait `Itertools`: extra iterator adaptors and methods for iterators.",null,null],[11,"interleave","","Alternate elements from two iterators until both have run out.",54,{"i":[{"n":"self"},{"n":"j"}],"o":{"n":"interleave"}}],[11,"interleave_shortest","","Alternate elements from two iterators until at least one of them has run out.",54,{"i":[{"n":"self"},{"n":"j"}],"o":{"n":"interleaveshortest"}}],[11,"intersperse","","An iterator adaptor to insert a particular value between each element of the adapted iterator.",54,null],[11,"zip_longest","","Create an iterator which iterates over both this and the specified iterator simultaneously, yielding pairs of two optional elements.",54,{"i":[{"n":"self"},{"n":"j"}],"o":{"n":"ziplongest"}}],[11,"zip_eq","","Create an iterator which iterates over both this and the specified iterator simultaneously, yielding pairs of elements.",54,{"i":[{"n":"self"},{"n":"j"}],"o":{"n":"zipeq"}}],[11,"batching","","A “meta iterator adaptor”. Its closure recives a reference to the iterator and may pick off as many elements as it likes, to produce the next iterator element.",54,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"batching"}}],[11,"group_by","","Return an iterable that can group iterator elements. Consecutive elements that map to the same key (“runs”), are assigned to the same group.",54,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"groupby"}}],[11,"chunks","","Return an iterable that can chunk the iterator.",54,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"intochunks"}}],[11,"tuple_windows","","Return an iterator over all contiguous windows producing tuples of a specific size (up to 4).",54,{"i":[{"n":"self"}],"o":{"n":"tuplewindows"}}],[11,"tuples","","Return an iterator that groups the items in tuples of a specific size (up to 4).",54,{"i":[{"n":"self"}],"o":{"n":"tuples"}}],[11,"tee","","Split into an iterator pair that both yield all elements from the original iterator.",54,null],[11,"step","","Return an iterator adaptor that steps `n` elements in the base iterator for each iteration.",54,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"step"}}],[11,"map_results","","Return an iterator adaptor that applies the provided closure to every `Result::Ok` value. `Result::Err` values are unchanged.",54,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"mapresults"}}],[11,"merge","","Return an iterator adaptor that merges the two base iterators in ascending order.  If both base iterators are sorted (ascending), the result is sorted.",54,{"i":[{"n":"self"},{"n":"j"}],"o":{"n":"merge"}}],[11,"merge_by","","Return an iterator adaptor that merges the two base iterators in order. This is much like `.merge()` but allows for a custom ordering.",54,{"i":[{"n":"self"},{"n":"j"},{"n":"f"}],"o":{"n":"mergeby"}}],[11,"kmerge","","Return an iterator adaptor that flattens an iterator of iterators by merging them in ascending order.",54,{"i":[{"n":"self"}],"o":{"n":"kmerge"}}],[11,"kmerge_by","","Return an iterator adaptor that flattens an iterator of iterators by merging them according to the given closure.",54,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"kmergeby"}}],[11,"cartesian_product","","Return an iterator adaptor that iterates over the cartesian product of the element sets of two iterators `self` and `J`.",54,{"i":[{"n":"self"},{"n":"j"}],"o":{"n":"product"}}],[11,"coalesce","","Return an iterator adaptor that uses the passed-in closure to optionally merge together consecutive elements.",54,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"coalesce"}}],[11,"dedup","","Remove duplicates from sections of consecutive identical elements. If the iterator is sorted, all elements will be unique.",54,{"i":[{"n":"self"}],"o":{"n":"dedup"}}],[11,"unique","","Return an iterator adaptor that filters out elements that have already been produced once during the iteration. Duplicates are detected using hash and equality.",54,{"i":[{"n":"self"}],"o":{"n":"unique"}}],[11,"unique_by","","Return an iterator adaptor that filters out elements that have already been produced once during the iteration.",54,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"uniqueby"}}],[11,"peeking_take_while","","Return an iterator adaptor that borrows from this iterator and takes items while the closure `accept` returns `true`.",54,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"peekingtakewhile"}}],[11,"take_while_ref","","Return an iterator adaptor that borrows from a `Clone`-able iterator to only pick off elements while the predicate `accept` returns `true`.",54,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"takewhileref"}}],[11,"while_some","","Return an iterator adaptor that filters `Option<A>` iterator elements and produces `A`. Stops on the first `None` encountered.",54,{"i":[{"n":"self"}],"o":{"n":"whilesome"}}],[11,"tuple_combinations","","Return an iterator adaptor that iterates over the combinations of the elements from an iterator.",54,{"i":[{"n":"self"}],"o":{"n":"tuplecombinations"}}],[11,"combinations","","Return an iterator adaptor that iterates over the `n`-length combinations of the elements from an iterator.",54,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"combinations"}}],[11,"pad_using","","Return an iterator adaptor that pads the sequence to a minimum length of `min` by filling missing elements using a closure `f`.",54,{"i":[{"n":"self"},{"n":"usize"},{"n":"f"}],"o":{"n":"padusing"}}],[11,"flatten","","Unravel a nested iterator.",54,{"i":[{"n":"self"}],"o":{"n":"flatten"}}],[11,"with_position","","Return an iterator adaptor that wraps each element in a `Position` to ease special-case handling of the first or last elements.",54,{"i":[{"n":"self"}],"o":{"n":"withposition"}}],[11,"positions","","Return an iterator adaptor that yields the indices of all elements satisfying a predicate, counted from the start of the iterator.",54,{"i":[{"n":"self"},{"n":"p"}],"o":{"n":"positions"}}],[11,"next_tuple","","Advances the iterator and returns the next items grouped in a tuple of a specific size (up to 4).",54,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"find_position","","Find the position and value of the first element satisfying a predicate.",54,{"i":[{"n":"self"},{"n":"p"}],"o":{"n":"option"}}],[11,"all_equal","","Check whether all elements compare equal.",54,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"dropping","","Consume the first `n` elements from the iterator eagerly, and return the same iterator again.",54,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"self"}}],[11,"dropping_back","","Consume the last `n` elements from the iterator eagerly, and return the same iterator again.",54,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"self"}}],[11,"foreach","","Run the closure `f` eagerly on each element of the iterator.",54,{"i":[{"n":"self"},{"n":"f"}]}],[11,"concat","","Combine all an iterator's elements into one element by using `Extend`.",54,null],[11,"collect_vec","","`.collect_vec()` is simply a type specialization of `.collect()`, for convenience.",54,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"set_from","","Assign to each reference in `self` from the `from` iterator, stopping at the shortest of the two iterators.",54,{"i":[{"n":"self"},{"n":"j"}],"o":{"n":"usize"}}],[11,"join","","Combine all iterator elements into one String, seperated by `sep`.",54,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"string"}}],[11,"format","","Format all iterator elements, separated by `sep`.",54,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"format"}}],[11,"format_with","","Format all iterator elements, separated by `sep`.",54,{"i":[{"n":"self"},{"n":"str"},{"n":"f"}],"o":{"n":"formatwith"}}],[11,"fold_results","","Fold `Result` values from an iterator.",54,{"i":[{"n":"self"},{"n":"b"},{"n":"f"}],"o":{"n":"result"}}],[11,"fold_options","","Fold `Option` values from an iterator.",54,{"i":[{"n":"self"},{"n":"b"},{"n":"f"}],"o":{"n":"option"}}],[11,"fold1","","Accumulator of the elements in the iterator.",54,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"option"}}],[11,"fold_while","","An iterator method that applies a function, producing a single, final value.",54,{"i":[{"n":"self"},{"n":"b"},{"n":"f"}],"o":{"n":"foldwhile"}}],[11,"sorted","","Collect all iterator elements into a sorted vector in ascending order.",54,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"sorted_by","","Collect all iterator elements into a sorted vector.",54,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"vec"}}],[11,"partition_map","","Collect all iterator elements into one of two partitions. Unlike `Iterator::partition`, each partition may have a distinct type.",54,null],[11,"minmax","","Return the minimum and maximum elements in the iterator.",54,{"i":[{"n":"self"}],"o":{"n":"minmaxresult"}}],[11,"minmax_by_key","","Return the minimum and maximum element of an iterator, as determined by the specified function.",54,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"minmaxresult"}}],[11,"minmax_by","","Return the minimum and maximum element of an iterator, as determined by the specified comparison function.",54,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"minmaxresult"}}],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"foldwhile"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"into_inner","","Return the value in the continue or done.",5,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"is_done","","Return true if `self` is `Done`, false if it is `Continue`.",5,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[14,"iproduct","","Create an iterator over the “cartesian product” of iterators.",null,null],[14,"izip","","Create an iterator running multiple iterators in lockstep.",null,null],[11,"is_left","","Return true if the value is the `Left` variant.",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_right","","Return true if the value is the `Right` variant.",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"left","","Convert the left side of `Either<L, R>` to an `Option<L>`.",0,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"right","","Convert the right side of `Either<L, R>` to an `Option<R>`.",0,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"as_ref","","Convert `&Either<L, R>` to `Either<&L, &R>`.",0,{"i":[{"n":"self"}],"o":{"n":"either"}}],[11,"as_mut","","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.",0,{"i":[{"n":"self"}],"o":{"n":"either"}}],[11,"flip","","Convert `Either<L, R>` to `Either<R, L>`.",0,{"i":[{"n":"self"}],"o":{"n":"either"}}],[11,"map_left","","Apply the function `f` on the value in the `Left` variant if it is present rewrapping the result in `Left`.",0,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"either"}}],[11,"map_right","","Apply the function `f` on the value in the `Right` variant if it is present rewrapping the result in `Right`.",0,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"either"}}],[11,"either","","Apply one of two functions depending on contents, unifying their result. If the value is `Left(L)` then the first function `f` is applied; if it is `Right(R)` then the second function `g` is applied.",0,{"i":[{"n":"self"},{"n":"f"},{"n":"g"}],"o":{"n":"t"}}],[11,"either_with","","Like `either`, but provide some context to whichever of the functions ends up being called.",0,{"i":[{"n":"self"},{"n":"ctx"},{"n":"f"},{"n":"g"}],"o":{"n":"t"}}],[11,"left_and_then","","Apply the function `f` on the value in the `Left` variant if it is present.",0,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"either"}}],[11,"right_and_then","","Apply the function `f` on the value in the `Right` variant if it is present.",0,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"either"}}],[11,"into_iter","","Convert the inner value to an iterator.",0,{"i":[{"n":"self"}],"o":{"n":"either"}}],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",0,null],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",0,null],[11,"into_inner","","Extract the value of an either over two equivalent types.",0,{"i":[{"n":"self"}],"o":{"n":"t"}}],[11,"partial_cmp","","",0,{"i":[{"n":"self"},{"n":"either"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",0,{"i":[{"n":"self"},{"n":"either"}],"o":{"n":"bool"}}],[11,"le","","",0,{"i":[{"n":"self"},{"n":"either"}],"o":{"n":"bool"}}],[11,"gt","","",0,{"i":[{"n":"self"},{"n":"either"}],"o":{"n":"bool"}}],[11,"ge","","",0,{"i":[{"n":"self"},{"n":"either"}],"o":{"n":"bool"}}],[11,"deref_mut","","",0,null],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"either"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"either"}],"o":{"n":"bool"}}],[11,"ne","","",0,{"i":[{"n":"self"},{"n":"either"}],"o":{"n":"bool"}}],[11,"next_back","","",0,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"into","","",0,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"from","","",0,{"i":[{"n":"result"}],"o":{"n":"either"}}],[11,"extend","","",0,null],[11,"as_ref","","",0,{"i":[{"n":"self"}],"o":{"n":"target"}}],[11,"next","","",0,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"size_hint","","",0,null],[11,"fold","","",0,{"i":[{"n":"self"},{"n":"acc"},{"n":"g"}],"o":{"n":"acc"}}],[11,"count","","",0,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"last","","",0,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"nth","","",0,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"option"}}],[11,"collect","","",0,{"i":[{"n":"self"}],"o":{"n":"b"}}],[11,"all","","",0,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"bool"}}],[11,"deref","","",0,null],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"as_mut","","",0,{"i":[{"n":"self"}],"o":{"n":"target"}}],[11,"hash","","",0,null],[11,"cmp","","",0,{"i":[{"n":"self"},{"n":"either"}],"o":{"n":"ordering"}}]],"paths":[[4,"Either"],[4,"Diff"],[4,"MinMaxResult"],[4,"Position"],[4,"EitherOrBoth"],[4,"FoldWhile"],[3,"RcIter"],[3,"Unfold"],[3,"MultiPeek"],[3,"Interleave"],[3,"InterleaveShortest"],[3,"PutBack"],[3,"PutBackN"],[3,"Product"],[3,"Batching"],[3,"Step"],[3,"Merge"],[3,"MergeBy"],[3,"Coalesce"],[3,"Dedup"],[3,"TakeWhileRef"],[3,"WhileSome"],[3,"TupleCombinations"],[3,"Combinations"],[3,"UniqueBy"],[3,"Unique"],[3,"Flatten"],[3,"MapResults"],[3,"Positions"],[3,"ConsTuples"],[3,"Format"],[3,"FormatWith"],[3,"Groups"],[3,"Group"],[3,"Chunks"],[3,"Chunk"],[3,"Intersperse"],[3,"KMerge"],[3,"KMergeBy"],[3,"PadUsing"],[3,"PeekingTakeWhile"],[3,"ProcessResults"],[3,"RepeatN"],[3,"RepeatCall"],[3,"Iterate"],[3,"Tee"],[3,"TupleBuffer"],[3,"Tuples"],[3,"TupleWindows"],[3,"WithPosition"],[3,"ZipEq"],[3,"ZipLongest"],[3,"Zip"],[8,"PeekingNext"],[8,"Itertools"]]};
searchIndex["pandoc"] = {"doc":"API that wraps the pandoc command line tool","items":[[3,"Pandoc","pandoc","the argument builder",null,null],[4,"TrackChanges","","",null,null],[13,"Accept","","",0,null],[13,"Reject","","",0,null],[13,"All","","",0,null],[4,"EmailObfuscation","","",null,null],[13,"None","","",1,null],[13,"Javascript","","",1,null],[13,"References","","",1,null],[4,"Tld","","",null,null],[13,"Chapter","","",2,null],[13,"Section","","",2,null],[13,"Part","","",2,null],[4,"PandocOption","","",null,null],[13,"DataDir","","--data-dir=DIRECTORY",3,null],[13,"Strict","","--strict",3,null],[13,"ParseRaw","","-R --parse-raw",3,null],[13,"Smart","","-S --smart",3,null],[13,"OldDashes","","--old-dashes",3,null],[13,"BaseHeaderLevel","","--base-header-level=NUMBER",3,null],[13,"IndentedCodeClasses","","--indented-code-classes=STRING",3,null],[13,"Filter","","-F PROGRAM --filter=PROGRAM",3,null],[13,"Normalize","","--normalize",3,null],[13,"PreserveTabs","","-p --preserve-tabs",3,null],[13,"TabStop","","--tab-stop=NUMBER",3,null],[13,"TrackChanges","","--track-changes=accept|reject|all",3,null],[13,"ExtractMedia","","--extract-media=PATH",3,null],[13,"Standalone","","-s --standalone",3,null],[13,"Template","","--template=FILENAME",3,null],[13,"Meta","","-M KEY[:VALUE] --metadata=KEY[:VALUE]",3,null],[13,"Var","","-V KEY[:VALUE] --variable=KEY[:VALUE]",3,null],[13,"PrintDefaultTemplate","","-D FORMAT --print-default-template=FORMAT",3,null],[13,"PrintDefaultDataFile","","--print-default-data-file=FILE",3,null],[13,"NoWrap","","--no-wrap",3,null],[13,"Columns","","--columns=NUMBER",3,null],[13,"TableOfContents","","--toc, --table-of-contents",3,null],[13,"TableOfContentsDepth","","--toc-depth=NUMBER",3,null],[13,"NoHighlight","","--no-highlight",3,null],[13,"HighlightStyle","","--highlight-style=STYLE",3,null],[13,"IncludeInHeader","","-H FILENAME --include-in-header=FILENAME",3,null],[13,"IncludeBeforeBody","","-B FILENAME --include-before-body=FILENAME",3,null],[13,"IncludeAfterBody","","-A FILENAME --include-after-body=FILENAME",3,null],[13,"SelfContained","","--self-contained",3,null],[13,"Offline","","--offline",3,null],[13,"Html5","","-5 --html5",3,null],[13,"HtmlQTags","","--html-q-tags",3,null],[13,"Ascii","","--ascii",3,null],[13,"ReferenceLinks","","--reference-links",3,null],[13,"AtxHeaders","","--atx-headers",3,null],[13,"TopLevelDivision","","--top-level-division=",3,null],[13,"NumberSections","","-N --number-sections",3,null],[13,"NumberOffset","","--number-offset=NUMBERS",3,null],[13,"NoTexLigatures","","--no-tex-ligatures",3,null],[13,"Listings","","--listings",3,null],[13,"Incremental","","-i --incremental",3,null],[13,"SlideLevel","","--slide-level=NUMBER",3,null],[13,"SectionDivs","","--section-divs",3,null],[13,"DefaultImageExtension","","--default-image-extension=extension",3,null],[13,"EmailObfuscation","","--email-obfuscation=none|javascript|references",3,null],[13,"IdPrefix","","--id-prefix=STRING",3,null],[13,"TitlePrefix","","-T STRING --title-prefix=STRING",3,null],[13,"Css","","-c URL --css=URL",3,null],[13,"ReferenceOdt","","--reference-odt=FILENAME",3,null],[13,"ReferenceDocx","","--reference-docx=FILENAME",3,null],[13,"EpubStylesheet","","--epub-stylesheet=FILENAME",3,null],[13,"EpubCoverImage","","--epub-cover-image=FILENAME",3,null],[13,"EpubMetadata","","--epub-metadata=FILENAME",3,null],[13,"EpubEmbedFont","","--epub-embed-font=FILE",3,null],[13,"EpubChapterLevel","","--epub-chapter-level=NUMBER",3,null],[13,"PdfEngine","","--pdf-engine=PROGRAM",3,null],[13,"PdfEngineOpt","","--pdf-engine-opt=STRING",3,null],[13,"Bibliography","","--bibliography=FILE",3,null],[13,"Csl","","--csl=FILE",3,null],[13,"CitationAbbreviations","","--citation-abbreviations=FILE",3,null],[13,"Natbib","","--natbib",3,null],[13,"Biblatex","","--biblatex",3,null],[13,"LatexMathML","","-m[URL] --latexmathml[=URL], --asciimathml[=URL]",3,null],[13,"AsciiMathML","","--asciimathml[=URL]",3,null],[13,"MathML","","--mathml[=URL]",3,null],[13,"MimeTex","","--mimetex[=URL]",3,null],[13,"WebTex","","--webtex[=URL]",3,null],[13,"JsMath","","--jsmath[=URL]",3,null],[13,"MathJax","","--mathjax[=URL]",3,null],[13,"Katex","","--katex[=URL]",3,null],[13,"KatexStylesheet","","--katex-stylesheet=URL",3,null],[13,"GladTex","","-gladtex",3,null],[13,"Trace","","--trace",3,null],[13,"DumpArgs","","--dump-args",3,null],[13,"IgnoreArgs","","--ignore-args",3,null],[13,"Verbose","","--verbose",3,null],[4,"DocumentClass","","equivalent to the latex document class",null,null],[13,"Article","","compact form of report",4,null],[13,"Report","","abstract + chapters + custom page for title, abstract and toc",4,null],[13,"Book","","no abstract",4,null],[4,"OutputFormat","","typesafe access to -t FORMAT, -w FORMAT, --to=FORMAT, --write=FORMAT",null,null],[13,"Native","","native Haskell",5,null],[13,"Json","","JSON version of native AST",5,null],[13,"Plain","","Plain text",5,null],[13,"Markdown","","pandoc’s extended markdown",5,null],[13,"MarkdownStrict","","original unextended markdown",5,null],[13,"MarkdownPhpextra","","PHP Markdown extra extended markdown",5,null],[13,"MarkdownGithub","","github extended markdown",5,null],[13,"Commonmark","","CommonMark markdown",5,null],[13,"Rst","","reStructuredText",5,null],[13,"Html","","XHTML 1",5,null],[13,"Html5","","HTML 5",5,null],[13,"Latex","","LaTeX",5,null],[13,"Beamer","","LaTeX beamer slide show",5,null],[13,"Context","","ConTeXt",5,null],[13,"Man","","Groff man",5,null],[13,"MediaWiki","","MediaWiki markup",5,null],[13,"Dokuwiki","","DokuWiki markup",5,null],[13,"Textile","","Textile",5,null],[13,"Org","","Emacs Org-Mode",5,null],[13,"Texinfo","","GNU Texinfo",5,null],[13,"Opml","","OPML",5,null],[13,"Docbook","","DocBook",5,null],[13,"OpenDocument","","Open Document",5,null],[13,"Odt","","OpenOffice text document",5,null],[13,"Docx","","Word docx",5,null],[13,"Haddock","","Haddock markup",5,null],[13,"Rtf","","Rich text format",5,null],[13,"Epub","","EPUB v2 book",5,null],[13,"Epub3","","EPUB v3",5,null],[13,"Fb2","","FictionBook2 e-book",5,null],[13,"Asciidoc","","AsciiDoc",5,null],[13,"Icml","","InDesign ICML",5,null],[13,"Slidy","","Slidy HTML and javascript slide show",5,null],[13,"Slideous","","Slideous HTML and javascript slide show",5,null],[13,"Dzslides","","DZSlides HTML5 + javascript slide show",5,null],[13,"Revealjs","","reveal.js HTML5 + javascript slide show",5,null],[13,"S5","","S5 HTML and javascript slide show",5,null],[13,"Lua","","the path of a custom lua writer (see Custom writers)",5,null],[4,"InputFormat","","typesafe access to -f FORMAT, -r FORMAT, --from=FORMAT, --read=FORMAT",null,null],[13,"Native","","native Haskell",6,null],[13,"Json","","JSON version of native AST",6,null],[13,"Markdown","","pandoc’s extended markdown",6,null],[13,"MarkdownStrict","","original unextended markdown",6,null],[13,"MarkdownPhpextra","","PHP Markdown extra extended markdown",6,null],[13,"MarkdownGithub","","github extended markdown",6,null],[13,"Commonmark","","CommonMark markdown",6,null],[13,"Textile","","Textile",6,null],[13,"Rst","","reStructuredText",6,null],[13,"Html","","HTML",6,null],[13,"DocBook","","DocBook",6,null],[13,"T2t","","txt2tags",6,null],[13,"Docx","","Word docx",6,null],[13,"Epub","","EPUB",6,null],[13,"Opml","","OPML",6,null],[13,"Org","","Emacs Org-Mode",6,null],[13,"MediaWiki","","MediaWiki markup",6,null],[13,"Twiki","","TWiki markup",6,null],[13,"Haddock","","Haddock markup",6,null],[13,"Latex","","LaTeX",6,null],[4,"MarkdownExtension","","",null,null],[13,"EscapedLineBreaks","","",7,null],[13,"BlankBeforeHeader","","",7,null],[13,"HeaderAttributes","","",7,null],[13,"AutoIdentifiers","","",7,null],[13,"ImplicitHeaderReferences","","",7,null],[13,"BlankBeforeBlockQuote","","",7,null],[13,"FencedCodeBlocks","","",7,null],[13,"BacktickCodeBlocks","","",7,null],[13,"FencedCodeAttributes","","",7,null],[13,"LineBlocks","","",7,null],[13,"FancyLists","","",7,null],[13,"Startnum","","",7,null],[13,"DefinitionLists","","",7,null],[13,"ExampleLists","","",7,null],[13,"TableCaptions","","",7,null],[13,"SimpleTables","","",7,null],[13,"MultilineTables","","",7,null],[13,"GridTables","","",7,null],[13,"PipeTables","","",7,null],[13,"PandocTitleBlock","","",7,null],[13,"YamlMetadataBlock","","",7,null],[13,"AllSymbolsEscapable","","",7,null],[13,"IntrawordUnderscores","","",7,null],[13,"Strikeout","","",7,null],[13,"Superscript","","",7,null],[13,"Subscript","","",7,null],[13,"InlineCodeAttributes","","",7,null],[13,"TexMathDollars","","",7,null],[13,"RawHtml","","",7,null],[13,"MarkdownInHtmlBlocks","","",7,null],[13,"NativeDivs","","",7,null],[13,"NativeSpans","","",7,null],[13,"RawTex","","",7,null],[13,"LatexMacros","","",7,null],[13,"ShortcutReferenceLinks","","",7,null],[13,"ImplicitFigures","","",7,null],[13,"Footnotes","","",7,null],[13,"InlineNotes","","",7,null],[13,"Citations","","",7,null],[13,"ListsWithoutPrecedingBlankline","","",7,null],[13,"HardLineBreaks","","",7,null],[13,"IgnoreLineBreaks","","",7,null],[13,"TexMathSingleBackslash","","",7,null],[13,"TexMathDoubleBackslash","","",7,null],[13,"MarkdownAttribute","","",7,null],[13,"MmdTitleBlock","","",7,null],[13,"Abbreviations","","",7,null],[13,"AutolinkBareUris","","",7,null],[13,"AsciiIdentifiers","","",7,null],[13,"LinkAttributes","","",7,null],[13,"MmdHeaderIdentifiers","","",7,null],[13,"CompactDefinitionLists","","",7,null],[4,"InputKind","","",null,null],[13,"Files","","",8,null],[13,"Pipe","","passed to the pandoc executable through stdin",8,null],[4,"OutputKind","","Specify whether to generate a file or pipe the output to stdout.",null,null],[13,"File","","",9,null],[13,"Pipe","","",9,null],[4,"PandocOutput","","The output from Pandoc: the file written to, or a buffer with its output.",null,null],[13,"ToFile","","The results of the pandoc operation are stored in `Path`",10,null],[13,"ToBuffer","","The results of the pandoc operation are returned as a `String`",10,null],[4,"PandocError","","Possible errors that can occur before or during pandoc execution",null,null],[13,"BadUtf8Conversion","","conversion from UTF-8 failed; includes valid-up-to byte count.",11,null],[13,"IoErr","","some kind of IO-Error",11,null],[13,"Err","","pandoc execution failed, provide output from stderr",11,null],[13,"NoOutputSpecified","","forgot to specify an output file",11,null],[13,"NoInputSpecified","","forgot to specify any input files",11,null],[13,"PandocNotFound","","pandoc executable not found",11,null],[5,"new","","Convenience function to call Pandoc::new()",null,{"o":{"n":"pandoc"}}],[6,"URL","","",null,null],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"trackchanges"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"emailobfuscation"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"tld"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"pandocoption"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"documentclass"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"outputformat"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",6,{"i":[{"n":"self"}],"o":{"n":"inputformat"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",7,{"i":[{"n":"self"}],"o":{"n":"markdownextension"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",8,{"i":[{"n":"self"}],"o":{"n":"inputkind"}}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",9,{"i":[{"n":"self"}],"o":{"n":"outputkind"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",12,{"o":{"n":"pandoc"}}],[11,"clone","","",12,{"i":[{"n":"self"}],"o":{"n":"pandoc"}}],[11,"new","","Get a new Pandoc object This function returns a builder object to configure the Pandoc execution.",12,{"o":{"n":"pandoc"}}],[11,"add_latex_path_hint","","Add a path hint to search for the LaTeX executable.",12,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"pandoc"}}],[11,"add_pandoc_path_hint","","Add a path hint to search for the Pandoc executable.",12,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"pandoc"}}],[11,"set_doc_class","","Set or overwrite the document-class.",12,{"i":[{"n":"self"},{"n":"documentclass"}],"o":{"n":"pandoc"}}],[11,"set_show_cmdline","","Set whether Pandoc should print the used command-line",12,{"i":[{"n":"self"},{"n":"bool"}],"o":{"n":"pandoc"}}],[11,"set_output_format","","Set or overwrite the output format.",12,{"i":[{"n":"self"},{"n":"outputformat"},{"g":["markdownextension"],"n":"vec"}],"o":{"n":"pandoc"}}],[11,"set_input_format","","Set or overwrite the input format",12,{"i":[{"n":"self"},{"n":"inputformat"},{"g":["markdownextension"],"n":"vec"}],"o":{"n":"pandoc"}}],[11,"add_input","","Add additional input files",12,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"pandoc"}}],[11,"set_input","","Set input for Pandoc.",12,{"i":[{"n":"self"},{"n":"inputkind"}],"o":{"n":"pandoc"}}],[11,"set_output","","Set or overwrite the output filename.",12,{"i":[{"n":"self"},{"n":"outputkind"}],"o":{"n":"pandoc"}}],[11,"set_bibliography","","Set the file name of the bibliography database.",12,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"pandoc"}}],[11,"set_csl","","Set the filename of the citation style file.",12,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"pandoc"}}],[11,"set_toc","","Enable the generation of a table of contents",12,{"i":[{"n":"self"}],"o":{"n":"pandoc"}}],[11,"set_chapters","","Treat top-level headers as chapters in LaTeX, ConTeXt, and DocBook output.",12,{"i":[{"n":"self"}],"o":{"n":"pandoc"}}],[11,"set_number_sections","","Set custom prefix for sections.",12,{"i":[{"n":"self"}],"o":{"n":"pandoc"}}],[11,"set_latex_template","","Set a custom latex template.",12,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"pandoc"}}],[11,"set_slide_level","","Set the header level that causes a new slide to be generated.",12,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"pandoc"}}],[11,"set_variable","","Set a custom variable.",12,{"i":[{"n":"self"},{"n":"t"},{"n":"u"}],"o":{"n":"pandoc"}}],[11,"add_filter","","Add a Pandoc filter.",12,null],[11,"add_option","","Add a PandocOption.",12,{"i":[{"n":"self"},{"n":"pandocoption"}],"o":{"n":"pandoc"}}],[11,"add_options","","",12,null],[11,"generate_latex_template","","generate a latex template from the given settings",12,{"i":[{"n":"self"},{"n":"t"}]}],[11,"execute","","Execute the Pandoc configured command.",12,{"i":[{"n":"self"}],"o":{"g":["pandocoutput","pandocerror"],"n":"result"}}],[11,"from","","",11,{"i":[{"n":"error"}],"o":{"n":"self"}}],[11,"from","","",11,{"i":[{"n":"utf8error"}],"o":{"n":"self"}}],[11,"fmt","","",11,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",11,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"description","","",11,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"cause","","",11,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"option"}}]],"paths":[[4,"TrackChanges"],[4,"EmailObfuscation"],[4,"Tld"],[4,"PandocOption"],[4,"DocumentClass"],[4,"OutputFormat"],[4,"InputFormat"],[4,"MarkdownExtension"],[4,"InputKind"],[4,"OutputKind"],[4,"PandocOutput"],[4,"PandocError"],[3,"Pandoc"]]};
initSearch(searchIndex);
